{"version":3,"file":"app.js","sources":["../node_modules/.pnpm/@crowdstrike+foundry-js@0.17.1/node_modules/@crowdstrike/foundry-js/dist/index.js","../src/falconService.js","../node_modules/.pnpm/dompurify@3.2.6/node_modules/dompurify/dist/purify.es.mjs","../src/htmlGenerator.js","../src/processDetection.js","../src/app.js"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nfunction unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nconst randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nvar native = {\n  randomUUID\n};\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  return unsafeStringify(rnds);\n}\n\nconst VERSION = 'current';\n\nfunction assertConnection(falcon) {\n    if (!falcon.isConnected) {\n        throw new Error('You cannot call this API before having established a connection to the host!');\n    }\n}\nfunction isValidResponse(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nevent) {\n    return !!event?.data?.meta?.messageId;\n}\n\nconst CONNECTION_TIMEOUT = 5_000;\nconst API_TIMEOUT = 30_000;\nconst NAVIGATION_TIMEOUT = 5_000;\nfunction timeoutForMessage(message) {\n    const timeout = message.type === 'connect'\n        ? CONNECTION_TIMEOUT\n        : message.type === 'api'\n            ? API_TIMEOUT\n            : message.type === 'navigateTo'\n                ? NAVIGATION_TIMEOUT\n                : // Requests not explicitly covered above will not have a timeout. This includes 'fileUpload', which is a user interaction that can take any amount of time.\n                    null;\n    // In tests we have mocked responses which do not require long timeouts\n    return timeout !== null && false ? 40 : timeout;\n}\nclass Bridge {\n    onDataUpdate;\n    onBroadcast;\n    onLivereload;\n    pendingMessages = new Map();\n    targetOrigin = '*';\n    constructor({ onDataUpdate, onBroadcast, onLivereload, } = {}) {\n        this.onDataUpdate = onDataUpdate;\n        this.onBroadcast = onBroadcast;\n        this.onLivereload = onLivereload;\n        window.addEventListener('message', this.handleMessageWrapper);\n    }\n    destroy() {\n        window.removeEventListener('message', this.handleMessageWrapper);\n    }\n    setOrigin(origin) {\n        this.targetOrigin = origin;\n    }\n    sendUnidirectionalMessage(message) {\n        const messageId = v4();\n        const eventData = {\n            message,\n            meta: {\n                messageId,\n                version: VERSION,\n            },\n        };\n        window.parent.postMessage(eventData, this.targetOrigin);\n    }\n    async postMessage(message) {\n        return new Promise((resolve, reject) => {\n            const messageId = v4();\n            let timeoutTimer;\n            const timeoutValue = timeoutForMessage(message);\n            if (timeoutValue !== null) {\n                timeoutTimer = setTimeout(() => {\n                    reject(new Error(`Waiting for response from foundry host for \"${message.type}\" message (ID: ${messageId}) timed out after ${timeoutValue}ms`));\n                }, timeoutValue);\n            }\n            this.pendingMessages.set(messageId, (result) => {\n                if (timeoutTimer) {\n                    clearTimeout(timeoutTimer);\n                }\n                resolve(result);\n            });\n            const eventData = {\n                message,\n                meta: {\n                    messageId,\n                    version: VERSION,\n                },\n            };\n            window.parent.postMessage(eventData, this.targetOrigin);\n        });\n    }\n    handleMessageWrapper = (event) => {\n        return this.handleMessage(event);\n    };\n    handleMessage = (event) => {\n        if (!isValidResponse(event)) {\n            return;\n        }\n        const { message } = event.data;\n        if (message.type === 'data') {\n            this.onDataUpdate?.(message);\n            // data update events are unidirectional and originated from the host, so there cannot be a callback waiting for this message\n            return;\n        }\n        if (message.type === 'broadcast') {\n            this.onBroadcast?.(message);\n            // data update events are unidirectional and are proxied via the host, so there cannot be a callback waiting for this message\n            return;\n        }\n        if (message.type === 'livereload') {\n            this.onLivereload?.(message);\n            // livereload events are unidirectional and are proxied via the host, so there cannot be a callback waiting for this message\n            return;\n        }\n        const { messageId } = event.data.meta;\n        const callback = this.pendingMessages.get(messageId);\n        if (!callback) {\n            this.throwError(`Received unexpected message`);\n            return;\n        }\n        this.pendingMessages.delete(messageId);\n        callback(message.payload);\n    };\n    throwError(message) {\n        throw new Error(message);\n    }\n}\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nconst anyMap = new WeakMap();\nconst eventsMap = new WeakMap();\nconst producersMap = new WeakMap();\n\nconst anyProducer = Symbol('anyProducer');\nconst resolvedPromise = Promise.resolve();\n\n// Define symbols for \"meta\" events.\nconst listenerAdded = Symbol('listenerAdded');\nconst listenerRemoved = Symbol('listenerRemoved');\n\nlet canEmitMetaEvents = false;\nlet isGlobalDebugEnabled = false;\n\nconst isEventKeyType = key => typeof key === 'string' || typeof key === 'symbol' || typeof key === 'number';\n\nfunction assertEventName(eventName) {\n\tif (!isEventKeyType(eventName)) {\n\t\tthrow new TypeError('`eventName` must be a string, symbol, or number');\n\t}\n}\n\nfunction assertListener(listener) {\n\tif (typeof listener !== 'function') {\n\t\tthrow new TypeError('listener must be a function');\n\t}\n}\n\nfunction getListeners(instance, eventName) {\n\tconst events = eventsMap.get(instance);\n\tif (!events.has(eventName)) {\n\t\treturn;\n\t}\n\n\treturn events.get(eventName);\n}\n\nfunction getEventProducers(instance, eventName) {\n\tconst key = isEventKeyType(eventName) ? eventName : anyProducer;\n\tconst producers = producersMap.get(instance);\n\tif (!producers.has(key)) {\n\t\treturn;\n\t}\n\n\treturn producers.get(key);\n}\n\nfunction enqueueProducers(instance, eventName, eventData) {\n\tconst producers = producersMap.get(instance);\n\tif (producers.has(eventName)) {\n\t\tfor (const producer of producers.get(eventName)) {\n\t\t\tproducer.enqueue(eventData);\n\t\t}\n\t}\n\n\tif (producers.has(anyProducer)) {\n\t\tconst item = Promise.all([eventName, eventData]);\n\t\tfor (const producer of producers.get(anyProducer)) {\n\t\t\tproducer.enqueue(item);\n\t\t}\n\t}\n}\n\nfunction iterator(instance, eventNames) {\n\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\n\tlet isFinished = false;\n\tlet flush = () => {};\n\tlet queue = [];\n\n\tconst producer = {\n\t\tenqueue(item) {\n\t\t\tqueue.push(item);\n\t\t\tflush();\n\t\t},\n\t\tfinish() {\n\t\t\tisFinished = true;\n\t\t\tflush();\n\t\t},\n\t};\n\n\tfor (const eventName of eventNames) {\n\t\tlet set = getEventProducers(instance, eventName);\n\t\tif (!set) {\n\t\t\tset = new Set();\n\t\t\tconst producers = producersMap.get(instance);\n\t\t\tproducers.set(eventName, set);\n\t\t}\n\n\t\tset.add(producer);\n\t}\n\n\treturn {\n\t\tasync next() {\n\t\t\tif (!queue) {\n\t\t\t\treturn {done: true};\n\t\t\t}\n\n\t\t\tif (queue.length === 0) {\n\t\t\t\tif (isFinished) {\n\t\t\t\t\tqueue = undefined;\n\t\t\t\t\treturn this.next();\n\t\t\t\t}\n\n\t\t\t\tawait new Promise(resolve => {\n\t\t\t\t\tflush = resolve;\n\t\t\t\t});\n\n\t\t\t\treturn this.next();\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdone: false,\n\t\t\t\tvalue: await queue.shift(),\n\t\t\t};\n\t\t},\n\n\t\tasync return(value) {\n\t\t\tqueue = undefined;\n\n\t\t\tfor (const eventName of eventNames) {\n\t\t\t\tconst set = getEventProducers(instance, eventName);\n\t\t\t\tif (set) {\n\t\t\t\t\tset.delete(producer);\n\t\t\t\t\tif (set.size === 0) {\n\t\t\t\t\t\tconst producers = producersMap.get(instance);\n\t\t\t\t\t\tproducers.delete(eventName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tflush();\n\n\t\t\treturn arguments.length > 0\n\t\t\t\t? {done: true, value: await value}\n\t\t\t\t: {done: true};\n\t\t},\n\n\t\t[Symbol.asyncIterator]() {\n\t\t\treturn this;\n\t\t},\n\t};\n}\n\nfunction defaultMethodNamesOrAssert(methodNames) {\n\tif (methodNames === undefined) {\n\t\treturn allEmitteryMethods;\n\t}\n\n\tif (!Array.isArray(methodNames)) {\n\t\tthrow new TypeError('`methodNames` must be an array of strings');\n\t}\n\n\tfor (const methodName of methodNames) {\n\t\tif (!allEmitteryMethods.includes(methodName)) {\n\t\t\tif (typeof methodName !== 'string') {\n\t\t\t\tthrow new TypeError('`methodNames` element must be a string');\n\t\t\t}\n\n\t\t\tthrow new Error(`${methodName} is not Emittery method`);\n\t\t}\n\t}\n\n\treturn methodNames;\n}\n\nconst isMetaEvent = eventName => eventName === listenerAdded || eventName === listenerRemoved;\n\nfunction emitMetaEvent(emitter, eventName, eventData) {\n\tif (isMetaEvent(eventName)) {\n\t\ttry {\n\t\t\tcanEmitMetaEvents = true;\n\t\t\temitter.emit(eventName, eventData);\n\t\t} finally {\n\t\t\tcanEmitMetaEvents = false;\n\t\t}\n\t}\n}\n\nclass Emittery {\n\tstatic mixin(emitteryPropertyName, methodNames) {\n\t\tmethodNames = defaultMethodNamesOrAssert(methodNames);\n\t\treturn target => {\n\t\t\tif (typeof target !== 'function') {\n\t\t\t\tthrow new TypeError('`target` must be function');\n\t\t\t}\n\n\t\t\tfor (const methodName of methodNames) {\n\t\t\t\tif (target.prototype[methodName] !== undefined) {\n\t\t\t\t\tthrow new Error(`The property \\`${methodName}\\` already exists on \\`target\\``);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction getEmitteryProperty() {\n\t\t\t\tObject.defineProperty(this, emitteryPropertyName, {\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\tvalue: new Emittery(),\n\t\t\t\t});\n\t\t\t\treturn this[emitteryPropertyName];\n\t\t\t}\n\n\t\t\tObject.defineProperty(target.prototype, emitteryPropertyName, {\n\t\t\t\tenumerable: false,\n\t\t\t\tget: getEmitteryProperty,\n\t\t\t});\n\n\t\t\tconst emitteryMethodCaller = methodName => function (...args) {\n\t\t\t\treturn this[emitteryPropertyName][methodName](...args);\n\t\t\t};\n\n\t\t\tfor (const methodName of methodNames) {\n\t\t\t\tObject.defineProperty(target.prototype, methodName, {\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\tvalue: emitteryMethodCaller(methodName),\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn target;\n\t\t};\n\t}\n\n\tstatic get isDebugEnabled() {\n\t\t// In a browser environment, `globalThis.process` can potentially reference a DOM Element with a `#process` ID,\n\t\t// so instead of just type checking `globalThis.process`, we need to make sure that `globalThis.process.env` exists.\n\t\t// eslint-disable-next-line n/prefer-global/process\n\t\tif (typeof globalThis.process?.env !== 'object') {\n\t\t\treturn isGlobalDebugEnabled;\n\t\t}\n\n\t\t// eslint-disable-next-line n/prefer-global/process\n\t\tconst {env} = globalThis.process ?? {env: {}};\n\t\treturn env.DEBUG === 'emittery' || env.DEBUG === '*' || isGlobalDebugEnabled;\n\t}\n\n\tstatic set isDebugEnabled(newValue) {\n\t\tisGlobalDebugEnabled = newValue;\n\t}\n\n\tconstructor(options = {}) {\n\t\tanyMap.set(this, new Set());\n\t\teventsMap.set(this, new Map());\n\t\tproducersMap.set(this, new Map());\n\n\t\tproducersMap.get(this).set(anyProducer, new Set());\n\n\t\tthis.debug = options.debug ?? {};\n\n\t\tif (this.debug.enabled === undefined) {\n\t\t\tthis.debug.enabled = false;\n\t\t}\n\n\t\tif (!this.debug.logger) {\n\t\t\tthis.debug.logger = (type, debugName, eventName, eventData) => {\n\t\t\t\ttry {\n\t\t\t\t\t// TODO: Use https://github.com/sindresorhus/safe-stringify when the package is more mature. Just copy-paste the code.\n\t\t\t\t\teventData = JSON.stringify(eventData);\n\t\t\t\t} catch {\n\t\t\t\t\teventData = `Object with the following keys failed to stringify: ${Object.keys(eventData).join(',')}`;\n\t\t\t\t}\n\n\t\t\t\tif (typeof eventName === 'symbol' || typeof eventName === 'number') {\n\t\t\t\t\teventName = eventName.toString();\n\t\t\t\t}\n\n\t\t\t\tconst currentTime = new Date();\n\t\t\t\tconst logTime = `${currentTime.getHours()}:${currentTime.getMinutes()}:${currentTime.getSeconds()}.${currentTime.getMilliseconds()}`;\n\t\t\t\tconsole.log(`[${logTime}][emittery:${type}][${debugName}] Event Name: ${eventName}\\n\\tdata: ${eventData}`);\n\t\t\t};\n\t\t}\n\t}\n\n\tlogIfDebugEnabled(type, eventName, eventData) {\n\t\tif (Emittery.isDebugEnabled || this.debug.enabled) {\n\t\t\tthis.debug.logger(type, this.debug.name, eventName, eventData);\n\t\t}\n\t}\n\n\ton(eventNames, listener) {\n\t\tassertListener(listener);\n\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tfor (const eventName of eventNames) {\n\t\t\tassertEventName(eventName);\n\t\t\tlet set = getListeners(this, eventName);\n\t\t\tif (!set) {\n\t\t\t\tset = new Set();\n\t\t\t\tconst events = eventsMap.get(this);\n\t\t\t\tevents.set(eventName, set);\n\t\t\t}\n\n\t\t\tset.add(listener);\n\n\t\t\tthis.logIfDebugEnabled('subscribe', eventName, undefined);\n\n\t\t\tif (!isMetaEvent(eventName)) {\n\t\t\t\temitMetaEvent(this, listenerAdded, {eventName, listener});\n\t\t\t}\n\t\t}\n\n\t\treturn this.off.bind(this, eventNames, listener);\n\t}\n\n\toff(eventNames, listener) {\n\t\tassertListener(listener);\n\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tfor (const eventName of eventNames) {\n\t\t\tassertEventName(eventName);\n\t\t\tconst set = getListeners(this, eventName);\n\t\t\tif (set) {\n\t\t\t\tset.delete(listener);\n\t\t\t\tif (set.size === 0) {\n\t\t\t\t\tconst events = eventsMap.get(this);\n\t\t\t\t\tevents.delete(eventName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.logIfDebugEnabled('unsubscribe', eventName, undefined);\n\n\t\t\tif (!isMetaEvent(eventName)) {\n\t\t\t\temitMetaEvent(this, listenerRemoved, {eventName, listener});\n\t\t\t}\n\t\t}\n\t}\n\n\tonce(eventNames) {\n\t\tlet off_;\n\n\t\tconst promise = new Promise(resolve => {\n\t\t\toff_ = this.on(eventNames, data => {\n\t\t\t\toff_();\n\t\t\t\tresolve(data);\n\t\t\t});\n\t\t});\n\n\t\tpromise.off = off_;\n\t\treturn promise;\n\t}\n\n\tevents(eventNames) {\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tfor (const eventName of eventNames) {\n\t\t\tassertEventName(eventName);\n\t\t}\n\n\t\treturn iterator(this, eventNames);\n\t}\n\n\tasync emit(eventName, eventData) {\n\t\tassertEventName(eventName);\n\n\t\tif (isMetaEvent(eventName) && !canEmitMetaEvents) {\n\t\t\tthrow new TypeError('`eventName` cannot be meta event `listenerAdded` or `listenerRemoved`');\n\t\t}\n\n\t\tthis.logIfDebugEnabled('emit', eventName, eventData);\n\n\t\tenqueueProducers(this, eventName, eventData);\n\n\t\tconst listeners = getListeners(this, eventName) ?? new Set();\n\t\tconst anyListeners = anyMap.get(this);\n\t\tconst staticListeners = [...listeners];\n\t\tconst staticAnyListeners = isMetaEvent(eventName) ? [] : [...anyListeners];\n\n\t\tawait resolvedPromise;\n\t\tawait Promise.all([\n\t\t\t...staticListeners.map(async listener => {\n\t\t\t\tif (listeners.has(listener)) {\n\t\t\t\t\treturn listener(eventData);\n\t\t\t\t}\n\t\t\t}),\n\t\t\t...staticAnyListeners.map(async listener => {\n\t\t\t\tif (anyListeners.has(listener)) {\n\t\t\t\t\treturn listener(eventName, eventData);\n\t\t\t\t}\n\t\t\t}),\n\t\t]);\n\t}\n\n\tasync emitSerial(eventName, eventData) {\n\t\tassertEventName(eventName);\n\n\t\tif (isMetaEvent(eventName) && !canEmitMetaEvents) {\n\t\t\tthrow new TypeError('`eventName` cannot be meta event `listenerAdded` or `listenerRemoved`');\n\t\t}\n\n\t\tthis.logIfDebugEnabled('emitSerial', eventName, eventData);\n\n\t\tconst listeners = getListeners(this, eventName) ?? new Set();\n\t\tconst anyListeners = anyMap.get(this);\n\t\tconst staticListeners = [...listeners];\n\t\tconst staticAnyListeners = [...anyListeners];\n\n\t\tawait resolvedPromise;\n\t\t/* eslint-disable no-await-in-loop */\n\t\tfor (const listener of staticListeners) {\n\t\t\tif (listeners.has(listener)) {\n\t\t\t\tawait listener(eventData);\n\t\t\t}\n\t\t}\n\n\t\tfor (const listener of staticAnyListeners) {\n\t\t\tif (anyListeners.has(listener)) {\n\t\t\t\tawait listener(eventName, eventData);\n\t\t\t}\n\t\t}\n\t\t/* eslint-enable no-await-in-loop */\n\t}\n\n\tonAny(listener) {\n\t\tassertListener(listener);\n\n\t\tthis.logIfDebugEnabled('subscribeAny', undefined, undefined);\n\n\t\tanyMap.get(this).add(listener);\n\t\temitMetaEvent(this, listenerAdded, {listener});\n\t\treturn this.offAny.bind(this, listener);\n\t}\n\n\tanyEvent() {\n\t\treturn iterator(this);\n\t}\n\n\toffAny(listener) {\n\t\tassertListener(listener);\n\n\t\tthis.logIfDebugEnabled('unsubscribeAny', undefined, undefined);\n\n\t\temitMetaEvent(this, listenerRemoved, {listener});\n\t\tanyMap.get(this).delete(listener);\n\t}\n\n\tclearListeners(eventNames) {\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\n\t\tfor (const eventName of eventNames) {\n\t\t\tthis.logIfDebugEnabled('clear', eventName, undefined);\n\n\t\t\tif (isEventKeyType(eventName)) {\n\t\t\t\tconst set = getListeners(this, eventName);\n\t\t\t\tif (set) {\n\t\t\t\t\tset.clear();\n\t\t\t\t}\n\n\t\t\t\tconst producers = getEventProducers(this, eventName);\n\t\t\t\tif (producers) {\n\t\t\t\t\tfor (const producer of producers) {\n\t\t\t\t\t\tproducer.finish();\n\t\t\t\t\t}\n\n\t\t\t\t\tproducers.clear();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tanyMap.get(this).clear();\n\n\t\t\t\tfor (const [eventName, listeners] of eventsMap.get(this).entries()) {\n\t\t\t\t\tlisteners.clear();\n\t\t\t\t\teventsMap.get(this).delete(eventName);\n\t\t\t\t}\n\n\t\t\t\tfor (const [eventName, producers] of producersMap.get(this).entries()) {\n\t\t\t\t\tfor (const producer of producers) {\n\t\t\t\t\t\tproducer.finish();\n\t\t\t\t\t}\n\n\t\t\t\t\tproducers.clear();\n\t\t\t\t\tproducersMap.get(this).delete(eventName);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tlistenerCount(eventNames) {\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tlet count = 0;\n\n\t\tfor (const eventName of eventNames) {\n\t\t\tif (isEventKeyType(eventName)) {\n\t\t\t\tcount += anyMap.get(this).size\n\t\t\t\t\t+ (getListeners(this, eventName)?.size ?? 0)\n\t\t\t\t\t+ (getEventProducers(this, eventName)?.size ?? 0)\n\t\t\t\t\t+ (getEventProducers(this)?.size ?? 0);\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (eventName !== undefined) {\n\t\t\t\tassertEventName(eventName);\n\t\t\t}\n\n\t\t\tcount += anyMap.get(this).size;\n\n\t\t\tfor (const value of eventsMap.get(this).values()) {\n\t\t\t\tcount += value.size;\n\t\t\t}\n\n\t\t\tfor (const value of producersMap.get(this).values()) {\n\t\t\t\tcount += value.size;\n\t\t\t}\n\t\t}\n\n\t\treturn count;\n\t}\n\n\tbindMethods(target, methodNames) {\n\t\tif (typeof target !== 'object' || target === null) {\n\t\t\tthrow new TypeError('`target` must be an object');\n\t\t}\n\n\t\tmethodNames = defaultMethodNamesOrAssert(methodNames);\n\n\t\tfor (const methodName of methodNames) {\n\t\t\tif (target[methodName] !== undefined) {\n\t\t\t\tthrow new Error(`The property \\`${methodName}\\` already exists on \\`target\\``);\n\t\t\t}\n\n\t\t\tObject.defineProperty(target, methodName, {\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: this[methodName].bind(this),\n\t\t\t});\n\t\t}\n\t}\n}\n\nconst allEmitteryMethods = Object.getOwnPropertyNames(Emittery.prototype).filter(v => v !== 'constructor');\n\nObject.defineProperty(Emittery, 'listenerAdded', {\n\tvalue: listenerAdded,\n\twritable: false,\n\tenumerable: true,\n\tconfigurable: false,\n});\nObject.defineProperty(Emittery, 'listenerRemoved', {\n\tvalue: listenerRemoved,\n\twritable: false,\n\tenumerable: true,\n\tconfigurable: false,\n});\n\nfunction Memoize(args) {\n    let hashFunction;\n    let duration;\n    let tags;\n    {\n        hashFunction = args;\n    }\n    return (target, propertyKey, descriptor) => {\n        if (descriptor.value != null) {\n            descriptor.value = getNewFunction(descriptor.value, hashFunction, duration, tags);\n        }\n        else if (descriptor.get != null) {\n            descriptor.get = getNewFunction(descriptor.get, hashFunction, duration, tags);\n        }\n        else {\n            throw 'Only put a Memoize() decorator on a method or get accessor.';\n        }\n    };\n}\nconst clearCacheTagsMap = new Map();\nfunction getNewFunction(originalMethod, hashFunction, duration = 0, tags) {\n    const propMapName = Symbol(`__memoized_map__`);\n    return function (...args) {\n        let returnedValue;\n        if (!this.hasOwnProperty(propMapName)) {\n            Object.defineProperty(this, propMapName, {\n                configurable: false,\n                enumerable: false,\n                writable: false,\n                value: new Map()\n            });\n        }\n        let myMap = this[propMapName];\n        if (Array.isArray(tags)) {\n            for (const tag of tags) {\n                if (clearCacheTagsMap.has(tag)) {\n                    clearCacheTagsMap.get(tag).push(myMap);\n                }\n                else {\n                    clearCacheTagsMap.set(tag, [myMap]);\n                }\n            }\n        }\n        if (hashFunction || args.length > 0 || duration > 0) {\n            let hashKey;\n            if (hashFunction === true) {\n                hashKey = args.map(a => a.toString()).join('!');\n            }\n            else if (hashFunction) {\n                hashKey = hashFunction.apply(this, args);\n            }\n            else {\n                hashKey = args[0];\n            }\n            const timestampKey = `${hashKey}__timestamp`;\n            let isExpired = false;\n            if (duration > 0) {\n                if (!myMap.has(timestampKey)) {\n                    isExpired = true;\n                }\n                else {\n                    let timestamp = myMap.get(timestampKey);\n                    isExpired = (Date.now() - timestamp) > duration;\n                }\n            }\n            if (myMap.has(hashKey) && !isExpired) {\n                returnedValue = myMap.get(hashKey);\n            }\n            else {\n                returnedValue = originalMethod.apply(this, args);\n                myMap.set(hashKey, returnedValue);\n                if (duration > 0) {\n                    myMap.set(timestampKey, Date.now());\n                }\n            }\n        }\n        else {\n            const hashKey = this;\n            if (myMap.has(hashKey)) {\n                returnedValue = myMap.get(hashKey);\n            }\n            else {\n                returnedValue = originalMethod.apply(this, args);\n                myMap.set(hashKey, returnedValue);\n            }\n        }\n        return returnedValue;\n    };\n}\n\n/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\nclass AlertsApiBridge {\n    bridge;\n    constructor(bridge) {\n        this.bridge = bridge;\n    }\n    getBridge() {\n        return this.bridge;\n    }\n    async deleteEntitiesSuppressedDevicesV1(urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'alerts',\n            method: 'deleteEntitiesSuppressedDevicesV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    /**\n     * @deprecated This method is deprecated. Use getQueriesAlertsV2 instead.\n     */\n    async getQueriesAlertsV1(urlParams = {}) {\n        console.warn('This method is deprecated. Use getQueriesAlertsV2 instead.');\n        const message = {\n            type: 'api',\n            api: 'alerts',\n            method: 'getQueriesAlertsV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getQueriesAlertsV2(urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'alerts',\n            method: 'getQueriesAlertsV2',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    /**\n     * @deprecated This method is deprecated. Use patchCombinedAlertsV3 instead.\n     */\n    async patchCombinedAlertsV2(postBody, urlParams = {}) {\n        console.warn('This method is deprecated. Use patchCombinedAlertsV3 instead.');\n        const message = {\n            type: 'api',\n            api: 'alerts',\n            method: 'patchCombinedAlertsV2',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async patchCombinedAlertsV3(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'alerts',\n            method: 'patchCombinedAlertsV3',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    /**\n     * @deprecated This method is deprecated. Use patchEntitiesAlertsV3 instead.\n     */\n    async patchEntitiesAlertsV2(postBody, urlParams = {}) {\n        console.warn('This method is deprecated. Use patchEntitiesAlertsV3 instead.');\n        const message = {\n            type: 'api',\n            api: 'alerts',\n            method: 'patchEntitiesAlertsV2',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async patchEntitiesAlertsV3(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'alerts',\n            method: 'patchEntitiesAlertsV3',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async patchEntitiesSuppressedDevicesV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'alerts',\n            method: 'patchEntitiesSuppressedDevicesV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    /**\n     * @deprecated This method is deprecated. Use postAggregatesAlertsV2 instead.\n     */\n    async postAggregatesAlertsV1(postBody, urlParams = {}) {\n        console.warn('This method is deprecated. Use postAggregatesAlertsV2 instead.');\n        const message = {\n            type: 'api',\n            api: 'alerts',\n            method: 'postAggregatesAlertsV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postAggregatesAlertsV2(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'alerts',\n            method: 'postAggregatesAlertsV2',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    /**\n     * @deprecated This method is deprecated. Use postEntitiesAlertsV2 instead.\n     */\n    async postEntitiesAlertsV1(postBody, urlParams = {}) {\n        console.warn('This method is deprecated. Use postEntitiesAlertsV2 instead.');\n        const message = {\n            type: 'api',\n            api: 'alerts',\n            method: 'postEntitiesAlertsV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postEntitiesAlertsV2(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'alerts',\n            method: 'postEntitiesAlertsV2',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postEntitiesSuppressedDevicesV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'alerts',\n            method: 'postEntitiesSuppressedDevicesV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n}\n\n/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\nclass CustomobjectsApiBridge {\n    bridge;\n    constructor(bridge) {\n        this.bridge = bridge;\n    }\n    getBridge() {\n        return this.bridge;\n    }\n    async deleteV1CollectionsCollectionNameObjectsObjectKey(urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'customobjects',\n            method: 'deleteV1CollectionsCollectionNameObjectsObjectKey',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getV1Collections(urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'customobjects',\n            method: 'getV1Collections',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getV1CollectionsCollectionNameObjects(urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'customobjects',\n            method: 'getV1CollectionsCollectionNameObjects',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getV1CollectionsCollectionNameObjectsObjectKey(urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'customobjects',\n            method: 'getV1CollectionsCollectionNameObjectsObjectKey',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getV1CollectionsCollectionNameObjectsObjectKeyMetadata(urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'customobjects',\n            method: 'getV1CollectionsCollectionNameObjectsObjectKeyMetadata',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postV1CollectionsCollectionNameObjects(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'customobjects',\n            method: 'postV1CollectionsCollectionNameObjects',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async putV1CollectionsCollectionNameObjectsObjectKey(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'customobjects',\n            method: 'putV1CollectionsCollectionNameObjectsObjectKey',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n}\n\n/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\nclass DetectsApiBridge {\n    bridge;\n    constructor(bridge) {\n        this.bridge = bridge;\n    }\n    getBridge() {\n        return this.bridge;\n    }\n    async getEntitiesSuppressedDevicesV1(urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'detects',\n            method: 'getEntitiesSuppressedDevicesV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async patchEntitiesDetectsV2(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'detects',\n            method: 'patchEntitiesDetectsV2',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async patchQueriesDetectsV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'detects',\n            method: 'patchQueriesDetectsV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async patchQueriesDetectsV2(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'detects',\n            method: 'patchQueriesDetectsV2',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postAggregatesDetectsGetV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'detects',\n            method: 'postAggregatesDetectsGetV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postEntitiesSummariesGetV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'detects',\n            method: 'postEntitiesSummariesGetV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postEntitiesSuppressedDevicesV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'detects',\n            method: 'postEntitiesSuppressedDevicesV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n}\n\n/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\nclass DevicesApiBridge {\n    bridge;\n    constructor(bridge) {\n        this.bridge = bridge;\n    }\n    getBridge() {\n        return this.bridge;\n    }\n    async deleteEntitiesGroupsV1(urlParams) {\n        const message = {\n            type: 'api',\n            api: 'devices',\n            method: 'deleteEntitiesGroupsV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getAggregatesBucketsV1(urlParams) {\n        const message = {\n            type: 'api',\n            api: 'devices',\n            method: 'getAggregatesBucketsV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getAggregatesFgaTagPrefixCountsV1(urlParams) {\n        const message = {\n            type: 'api',\n            api: 'devices',\n            method: 'getAggregatesFgaTagPrefixCountsV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getAggregatesTagPrefixCountsV1(urlParams) {\n        const message = {\n            type: 'api',\n            api: 'devices',\n            method: 'getAggregatesTagPrefixCountsV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getEntitiesFgaGroupsV1(urlParams) {\n        const message = {\n            type: 'api',\n            api: 'devices',\n            method: 'getEntitiesFgaGroupsV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getEntitiesGroupsV1(urlParams) {\n        const message = {\n            type: 'api',\n            api: 'devices',\n            method: 'getEntitiesGroupsV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getQueriesAvailableGroupsV1(urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'devices',\n            method: 'getQueriesAvailableGroupsV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getQueriesDevicesHiddenV2(urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'devices',\n            method: 'getQueriesDevicesHiddenV2',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getQueriesDevicesV1(urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'devices',\n            method: 'getQueriesDevicesV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getQueriesDevicesV2(urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'devices',\n            method: 'getQueriesDevicesV2',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getQueriesFgaGroupsV1(urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'devices',\n            method: 'getQueriesFgaGroupsV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getQueriesGroupsV1(urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'devices',\n            method: 'getQueriesGroupsV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async patchEntitiesDevicesTagsV2(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'devices',\n            method: 'patchEntitiesDevicesTagsV2',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async patchEntitiesGroupsV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'devices',\n            method: 'patchEntitiesGroupsV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postAggregatesDevicesGetV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'devices',\n            method: 'postAggregatesDevicesGetV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postAggregatesFgaHostsGetV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'devices',\n            method: 'postAggregatesFgaHostsGetV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postCombinedDevicesLoginHistoryV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'devices',\n            method: 'postCombinedDevicesLoginHistoryV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postCombinedFgaHostsLoginHistoryV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'devices',\n            method: 'postCombinedFgaHostsLoginHistoryV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postEntitiesDevicesActionsV4(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'devices',\n            method: 'postEntitiesDevicesActionsV4',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postEntitiesDevicesHiddenActionsV4(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'devices',\n            method: 'postEntitiesDevicesHiddenActionsV4',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postEntitiesDevicesReportsV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'devices',\n            method: 'postEntitiesDevicesReportsV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postEntitiesDevicesV2(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'devices',\n            method: 'postEntitiesDevicesV2',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postEntitiesFgaHostsReportsV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'devices',\n            method: 'postEntitiesFgaHostsReportsV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postEntitiesFgaHostsV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'devices',\n            method: 'postEntitiesFgaHostsV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postEntitiesGroupActionsV1(postBody, urlParams) {\n        const message = {\n            type: 'api',\n            api: 'devices',\n            method: 'postEntitiesGroupActionsV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postEntitiesGroupsV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'devices',\n            method: 'postEntitiesGroupsV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n}\n\n/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\nclass FaasGatewayApiBridge {\n    bridge;\n    constructor(bridge) {\n        this.bridge = bridge;\n    }\n    getBridge() {\n        return this.bridge;\n    }\n    async getEntitiesExecutionV1(urlParams) {\n        const message = {\n            type: 'api',\n            api: 'faasGateway',\n            method: 'getEntitiesExecutionV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postEntitiesExecutionV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'faasGateway',\n            method: 'postEntitiesExecutionV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n}\n\n/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\nclass FwmgrApiBridge {\n    bridge;\n    constructor(bridge) {\n        this.bridge = bridge;\n    }\n    getBridge() {\n        return this.bridge;\n    }\n    async deleteEntitiesNetworkLocationsV1(urlParams) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'deleteEntitiesNetworkLocationsV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async deleteEntitiesPoliciesV1(urlParams) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'deleteEntitiesPoliciesV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async deleteEntitiesRuleGroupsV1(urlParams) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'deleteEntitiesRuleGroupsV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getEntitiesEventsV1(urlParams) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'getEntitiesEventsV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getEntitiesFirewallFieldsV1(urlParams) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'getEntitiesFirewallFieldsV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getEntitiesNetworkLocationsDetailsV1(urlParams) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'getEntitiesNetworkLocationsDetailsV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getEntitiesNetworkLocationsV1(urlParams) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'getEntitiesNetworkLocationsV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getEntitiesPlatformsV1(urlParams) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'getEntitiesPlatformsV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getEntitiesPoliciesV1(urlParams) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'getEntitiesPoliciesV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getEntitiesRuleGroupsV1(urlParams) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'getEntitiesRuleGroupsV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getEntitiesRulesV1(urlParams) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'getEntitiesRulesV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getLibraryEntitiesRuleGroupsV1(urlParams) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'getLibraryEntitiesRuleGroupsV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getLibraryQueriesRuleGroupsV1(urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'getLibraryQueriesRuleGroupsV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getQueriesEventsV1(urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'getQueriesEventsV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getQueriesFirewallFieldsV1(urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'getQueriesFirewallFieldsV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getQueriesNetworkLocationsV1(urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'getQueriesNetworkLocationsV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getQueriesPlatformsV1(urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'getQueriesPlatformsV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getQueriesPolicyRulesV1(urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'getQueriesPolicyRulesV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getQueriesRuleGroupsV1(urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'getQueriesRuleGroupsV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getQueriesRulesV1(urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'getQueriesRulesV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async patchEntitiesNetworkLocationsV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'patchEntitiesNetworkLocationsV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async patchEntitiesRuleGroupsV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'patchEntitiesRuleGroupsV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postAggregatesEventsGetV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'postAggregatesEventsGetV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postAggregatesPolicyRulesGetV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'postAggregatesPolicyRulesGetV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postAggregatesRuleGroupsGetV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'postAggregatesRuleGroupsGetV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postAggregatesRulesGetV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'postAggregatesRulesGetV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postEntitiesNetworkLocationsMetadataV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'postEntitiesNetworkLocationsMetadataV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postEntitiesNetworkLocationsPrecedenceV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'postEntitiesNetworkLocationsPrecedenceV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postEntitiesNetworkLocationsV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'postEntitiesNetworkLocationsV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postEntitiesOntologyV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'postEntitiesOntologyV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postEntitiesRuleGroupsV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'postEntitiesRuleGroupsV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postEntitiesRulesValidateFilepathV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'postEntitiesRulesValidateFilepathV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async putEntitiesNetworkLocationsV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'putEntitiesNetworkLocationsV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async putEntitiesPoliciesV2(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'fwmgr',\n            method: 'putEntitiesPoliciesV2',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n}\n\n/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\nclass IncidentsApiBridge {\n    bridge;\n    constructor(bridge) {\n        this.bridge = bridge;\n    }\n    getBridge() {\n        return this.bridge;\n    }\n    async getCombinedCrowdscoresV1(urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'incidents',\n            method: 'getCombinedCrowdscoresV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getQueriesBehaviorsV1(urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'incidents',\n            method: 'getQueriesBehaviorsV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getQueriesIncidentsV1(urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'incidents',\n            method: 'getQueriesIncidentsV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postAggregatesBehaviorsGetV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'incidents',\n            method: 'postAggregatesBehaviorsGetV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postAggregatesIncidentsGetV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'incidents',\n            method: 'postAggregatesIncidentsGetV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postEntitiesBehaviorsGetV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'incidents',\n            method: 'postEntitiesBehaviorsGetV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postEntitiesIncidentActionsV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'incidents',\n            method: 'postEntitiesIncidentActionsV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postEntitiesIncidentsGetV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'incidents',\n            method: 'postEntitiesIncidentsGetV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n}\n\n/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\nclass LoggingapiApiBridge {\n    bridge;\n    constructor(bridge) {\n        this.bridge = bridge;\n    }\n    getBridge() {\n        return this.bridge;\n    }\n    async getEntitiesSavedSearchesExecuteV1(urlParams) {\n        const message = {\n            type: 'api',\n            api: 'loggingapi',\n            method: 'getEntitiesSavedSearchesExecuteV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getEntitiesSavedSearchesV1(urlParams) {\n        const message = {\n            type: 'api',\n            api: 'loggingapi',\n            method: 'getEntitiesSavedSearchesV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postEntitiesSavedSearchesExecuteV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'loggingapi',\n            method: 'postEntitiesSavedSearchesExecuteV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n}\n\n/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\nclass MitreApiBridge {\n    bridge;\n    constructor(bridge) {\n        this.bridge = bridge;\n    }\n    getBridge() {\n        return this.bridge;\n    }\n    async getIntelMitreEntitiesMatrixV1(urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'mitre',\n            method: 'getIntelMitreEntitiesMatrixV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n}\n\n/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\nclass PluginsApiBridge {\n    bridge;\n    constructor(bridge) {\n        this.bridge = bridge;\n    }\n    getBridge() {\n        return this.bridge;\n    }\n    async getEntitiesConfigsV1(urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'plugins',\n            method: 'getEntitiesConfigsV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getEntitiesDefinitionsV1(urlParams) {\n        const message = {\n            type: 'api',\n            api: 'plugins',\n            method: 'getEntitiesDefinitionsV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postEntitiesExecuteDraftV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'plugins',\n            method: 'postEntitiesExecuteDraftV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postEntitiesExecuteV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'plugins',\n            method: 'postEntitiesExecuteV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n}\n\n/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\nclass RemoteResponseApiBridge {\n    bridge;\n    constructor(bridge) {\n        this.bridge = bridge;\n    }\n    getBridge() {\n        return this.bridge;\n    }\n    async deleteEntitiesPutFilesV1(urlParams) {\n        const message = {\n            type: 'api',\n            api: 'remoteResponse',\n            method: 'deleteEntitiesPutFilesV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getEntitiesAppCommandV1(urlParams) {\n        const message = {\n            type: 'api',\n            api: 'remoteResponse',\n            method: 'getEntitiesAppCommandV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getEntitiesPutFilesV2(urlParams) {\n        const message = {\n            type: 'api',\n            api: 'remoteResponse',\n            method: 'getEntitiesPutFilesV2',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async getQueriesPutFilesV1(urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'remoteResponse',\n            method: 'getQueriesPutFilesV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postEntitiesAppCommandV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'remoteResponse',\n            method: 'postEntitiesAppCommandV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postEntitiesAppSessionsV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'remoteResponse',\n            method: 'postEntitiesAppSessionsV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n}\n\n/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\nclass UserManagementApiBridge {\n    bridge;\n    constructor(bridge) {\n        this.bridge = bridge;\n    }\n    getBridge() {\n        return this.bridge;\n    }\n    async getQueriesUsersV1(urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'userManagement',\n            method: 'getQueriesUsersV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postEntitiesUsersGetV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'userManagement',\n            method: 'postEntitiesUsersGetV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n}\n\n/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\nclass WorkflowsApiBridge {\n    bridge;\n    constructor(bridge) {\n        this.bridge = bridge;\n    }\n    getBridge() {\n        return this.bridge;\n    }\n    async getEntitiesExecutionResultsV1(urlParams) {\n        const message = {\n            type: 'api',\n            api: 'workflows',\n            method: 'getEntitiesExecutionResultsV1',\n            payload: {\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postEntitiesExecuteV1(postBody, urlParams = {}) {\n        const message = {\n            type: 'api',\n            api: 'workflows',\n            method: 'postEntitiesExecuteV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n    async postEntitiesExecutionActionsV1(postBody, urlParams) {\n        const message = {\n            type: 'api',\n            api: 'workflows',\n            method: 'postEntitiesExecutionActionsV1',\n            payload: {\n                body: postBody,\n                params: urlParams,\n            },\n        };\n        return this.bridge.postMessage(message);\n    }\n}\n\n/**\n *\n * This file is autogenerated.\n *\n * DO NOT EDIT DIRECTLY\n *\n **/\nclass FalconPublicApis {\n    api;\n    constructor(api) {\n        this.api = api;\n    }\n    get alerts() {\n        assertConnection(this.api);\n        return new AlertsApiBridge(this.api.bridge);\n    }\n    get detects() {\n        assertConnection(this.api);\n        return new DetectsApiBridge(this.api.bridge);\n    }\n    get devices() {\n        assertConnection(this.api);\n        return new DevicesApiBridge(this.api.bridge);\n    }\n    get fwmgr() {\n        assertConnection(this.api);\n        return new FwmgrApiBridge(this.api.bridge);\n    }\n    get incidents() {\n        assertConnection(this.api);\n        return new IncidentsApiBridge(this.api.bridge);\n    }\n    get mitre() {\n        assertConnection(this.api);\n        return new MitreApiBridge(this.api.bridge);\n    }\n    /**\n     * @internal\n     */\n    get plugins() {\n        assertConnection(this.api);\n        return new PluginsApiBridge(this.api.bridge);\n    }\n    get remoteResponse() {\n        assertConnection(this.api);\n        return new RemoteResponseApiBridge(this.api.bridge);\n    }\n    get userManagement() {\n        assertConnection(this.api);\n        return new UserManagementApiBridge(this.api.bridge);\n    }\n    get workflows() {\n        assertConnection(this.api);\n        return new WorkflowsApiBridge(this.api.bridge);\n    }\n    /**\n     * @internal\n     */\n    get customobjects() {\n        assertConnection(this.api);\n        return new CustomobjectsApiBridge(this.api.bridge);\n    }\n    /**\n     * @internal\n     */\n    get faasGateway() {\n        assertConnection(this.api);\n        return new FaasGatewayApiBridge(this.api.bridge);\n    }\n    /**\n     * @internal\n     */\n    get loggingapi() {\n        assertConnection(this.api);\n        return new LoggingapiApiBridge(this.api.bridge);\n    }\n}\n__decorate([\n    Memoize()\n], FalconPublicApis.prototype, \"alerts\", null);\n__decorate([\n    Memoize()\n], FalconPublicApis.prototype, \"detects\", null);\n__decorate([\n    Memoize()\n], FalconPublicApis.prototype, \"devices\", null);\n__decorate([\n    Memoize()\n], FalconPublicApis.prototype, \"fwmgr\", null);\n__decorate([\n    Memoize()\n], FalconPublicApis.prototype, \"incidents\", null);\n__decorate([\n    Memoize()\n], FalconPublicApis.prototype, \"mitre\", null);\n__decorate([\n    Memoize()\n], FalconPublicApis.prototype, \"plugins\", null);\n__decorate([\n    Memoize()\n], FalconPublicApis.prototype, \"remoteResponse\", null);\n__decorate([\n    Memoize()\n], FalconPublicApis.prototype, \"userManagement\", null);\n__decorate([\n    Memoize()\n], FalconPublicApis.prototype, \"workflows\", null);\n__decorate([\n    Memoize()\n], FalconPublicApis.prototype, \"customobjects\", null);\n__decorate([\n    Memoize()\n], FalconPublicApis.prototype, \"faasGateway\", null);\n__decorate([\n    Memoize()\n], FalconPublicApis.prototype, \"loggingapi\", null);\n\nclass ApiIntegration {\n    falcon;\n    definition;\n    constructor(falcon, definition) {\n        this.falcon = falcon;\n        this.definition = definition;\n    }\n    async execute({ request } = {}) {\n        return this.falcon.api.plugins.postEntitiesExecuteV1({\n            resources: [\n                {\n                    definition_id: this.definition.definitionId,\n                    operation_id: this.definition.operationId,\n                    request,\n                },\n            ],\n        });\n    }\n}\n\nclass CloudFunction {\n    falcon;\n    definition;\n    static GET = 'GET';\n    static POST = 'POST';\n    static PATCH = 'PATCH';\n    static PUT = 'PUT';\n    static DELETE = 'DELETE';\n    /**\n     * @internal\n     */\n    pollTimeout = 500;\n    /**\n     * @internal\n     */\n    intervalId;\n    /**\n     * @internal\n     */\n    constructor(falcon, definition) {\n        this.falcon = falcon;\n        this.definition = definition;\n    }\n    async execute({ path, method, body, params }) {\n        const functionDefinition = 'id' in this.definition\n            ? {\n                function_id: this.definition.id,\n                function_version: this.definition.version,\n            }\n            : {\n                function_name: this.definition.name,\n                function_version: this.definition.version,\n            };\n        const result = await this.falcon.api.faasGateway.postEntitiesExecutionV1({\n            ...functionDefinition,\n            payload: {\n                path,\n                method,\n                body,\n                params,\n            },\n        });\n        return new Promise((resolve, reject) => {\n            const execution = result?.resources?.[0];\n            if (!execution?.execution_id) {\n                reject(result?.errors);\n            }\n            else {\n                this.pollForResult({\n                    resolve,\n                    reject,\n                    executionId: execution?.execution_id,\n                });\n            }\n        });\n    }\n    async getExecutionResult(executionId) {\n        const resultResponse = await this.falcon.api.faasGateway.getEntitiesExecutionV1({\n            id: executionId,\n        });\n        const executionResult = resultResponse?.resources?.[0];\n        return executionResult?.payload;\n    }\n    pollForResult({ resolve, reject, executionId, }) {\n        let exceptionRetries = 2;\n        this.intervalId = window.setInterval(async () => {\n            try {\n                const payload = await this.getExecutionResult(executionId);\n                if (payload) {\n                    window.clearInterval(this.intervalId);\n                    resolve(payload);\n                }\n            }\n            catch (e) {\n                if (exceptionRetries <= 0) {\n                    window.clearInterval(this.intervalId);\n                    reject(e);\n                }\n                exceptionRetries--;\n            }\n        }, this.pollTimeout);\n    }\n    path(pathEntry) {\n        const urlPath = new URL(pathEntry, 'http://localhost');\n        const path = urlPath.pathname;\n        const searchParams = [...urlPath.searchParams.entries()].reduce((acc, [key, value]) => ({\n            ...acc,\n            [key]: [value],\n        }), {});\n        return {\n            path,\n            queryParams: searchParams,\n            get: async (params = {}) => {\n                return this.get({\n                    path,\n                    params: {\n                        query: params?.query ?? searchParams ?? {},\n                        header: params?.header ?? {},\n                    },\n                });\n            },\n            post: async (body, params = {}) => {\n                return this.post({\n                    path,\n                    params: {\n                        query: params?.query ?? searchParams ?? {},\n                        header: params?.header ?? {},\n                    },\n                    body,\n                });\n            },\n            patch: async (body, params = {}) => {\n                return this.patch({\n                    path,\n                    params: {\n                        query: params?.query ?? searchParams ?? {},\n                        header: params?.header ?? {},\n                    },\n                    body,\n                });\n            },\n            put: async (body, params = {}) => {\n                return this.put({\n                    path,\n                    params: {\n                        query: params?.query ?? searchParams ?? {},\n                        header: params?.header ?? {},\n                    },\n                    body,\n                });\n            },\n            delete: async (body, params = {}) => {\n                return this.delete({\n                    path,\n                    params: {\n                        query: params?.query ?? searchParams ?? {},\n                        header: params?.header ?? {},\n                    },\n                    body,\n                });\n            },\n        };\n    }\n    async get({ path, params }) {\n        return this.execute({\n            path,\n            method: CloudFunction.GET,\n            params,\n        });\n    }\n    async post({ path, params, body }) {\n        return this.execute({\n            path,\n            method: CloudFunction.POST,\n            body,\n            params,\n        });\n    }\n    async patch({ path, params, body }) {\n        return this.execute({\n            path,\n            method: CloudFunction.PATCH,\n            body,\n            params,\n        });\n    }\n    async put({ path, params, body }) {\n        return this.execute({\n            path,\n            method: CloudFunction.PUT,\n            body,\n            params,\n        });\n    }\n    async delete({ path, params, body }) {\n        return this.execute({\n            path,\n            method: CloudFunction.DELETE,\n            body,\n            params,\n        });\n    }\n    destroy() {\n        if (this.intervalId) {\n            window.clearInterval(this.intervalId);\n            this.intervalId = undefined;\n        }\n    }\n}\n\nclass Collection {\n    falcon;\n    definition;\n    constructor(falcon, definition) {\n        this.falcon = falcon;\n        this.definition = definition;\n    }\n    /**\n     * Write data to the collection\n     *\n     * @param key\n     * @param data\n     * @returns\n     */\n    async write(key, data) {\n        return this.falcon.bridge.postMessage({\n            type: 'collection',\n            payload: {\n                type: 'write',\n                key,\n                collection: this.definition.collection,\n                data,\n            },\n        });\n    }\n    /**\n     * Read the data for the given `key`\n     *\n     * @param key\n     * @returns\n     */\n    async read(key) {\n        return this.falcon.bridge.postMessage({\n            type: 'collection',\n            payload: {\n                type: 'read',\n                key,\n                collection: this.definition.collection,\n            },\n        });\n    }\n    /**\n     * Delete the data for the given `key`\n     *\n     * @param key\n     * @returns\n     */\n    async delete(key) {\n        return this.falcon.bridge.postMessage({\n            type: 'collection',\n            payload: {\n                type: 'delete',\n                key,\n                collection: this.definition.collection,\n            },\n        });\n    }\n    /**\n     * Search for data\n     *\n     * @param searchDefinition\n     * @returns\n     */\n    async search({ filter, offset, sort, limit, }) {\n        return this.falcon.bridge.postMessage({\n            type: 'collection',\n            payload: {\n                type: 'search',\n                filter,\n                limit,\n                offset,\n                sort,\n                collection: this.definition.collection,\n            },\n        });\n    }\n    /**\n     * lists the object keys in the specified collection\n     *\n     * @param searchDefinition\n     * @returns\n     */\n    async list(options) {\n        return this.falcon.bridge.postMessage({\n            type: 'collection',\n            payload: {\n                type: 'list',\n                collection: this.definition.collection,\n                start: options?.start,\n                end: options?.end,\n                limit: options?.limit,\n            },\n        });\n    }\n}\n\nclass Logscale {\n    falcon;\n    constructor(falcon) {\n        this.falcon = falcon;\n    }\n    /**\n     * Write data to LogScale\n     *\n     * @param data\n     * @param properties\n     * @returns\n     */\n    async write(\n    // @todo the proper type here is unclear  - we need to make clear how the user needs to call this\n    data, properties) {\n        return this.falcon.bridge.postMessage({\n            type: 'loggingapi',\n            payload: {\n                type: 'ingest',\n                data,\n                tag: properties?.tag,\n                tagSource: properties?.tagSource,\n                testData: properties?.testData,\n            },\n        });\n    }\n    /**\n     * Execute a dynamic query\n     *\n     * @param query\n     * @returns Promise that resolves with the data\n     */\n    async query(\n    // @todo the proper type here is unclear  - we need to make clear how the user needs to call this\n    query) {\n        return this.falcon.bridge.postMessage({\n            type: 'loggingapi',\n            payload: {\n                type: 'dynamic-execute',\n                data: query,\n            },\n        });\n    }\n    /**\n     * Execute a saved query\n     *\n     * @param savedQuery\n     * @returns\n     */\n    async savedQuery(\n    // @todo the proper type here is unclear  - we need to make clear how the user needs to call this\n    savedQuery) {\n        return this.falcon.bridge.postMessage({\n            type: 'loggingapi',\n            payload: {\n                type: 'saved-query-execute',\n                data: savedQuery,\n            },\n        });\n    }\n}\n\nconst ALLOWED_TARGETS = ['_self', '_blank'];\nclass Navigation {\n    falcon;\n    constructor(falcon) {\n        this.falcon = falcon;\n    }\n    async navigateTo({ path, type, target, metaKey, ctrlKey, shiftKey, }) {\n        await this.falcon.bridge.postMessage({\n            type: 'navigateTo',\n            payload: {\n                path,\n                type: type ?? 'falcon',\n                target: target ?? '_self',\n                metaKey: metaKey ?? false,\n                ctrlKey: ctrlKey ?? false,\n                shiftKey: shiftKey ?? false,\n            },\n        });\n    }\n    async onClick(event, defaultTarget = '_self', defaultType = 'falcon') {\n        if (!(event instanceof Event)) {\n            throw Error('\"event\" property should be subclass of Event');\n        }\n        if (!('preventDefault' in event)) {\n            return;\n        }\n        if (!(event.target instanceof HTMLAnchorElement)) {\n            return;\n        }\n        event.preventDefault();\n        const path = event.target.getAttribute('href');\n        defaultTarget =\n            event.target.getAttribute('target') ??\n                defaultTarget;\n        const type = (event.target.dataset?.type ??\n            defaultType);\n        if (defaultTarget === null ||\n            !ALLOWED_TARGETS.includes(defaultTarget)) {\n            throw new Error('Target should be _self or _blank');\n        }\n        const target = defaultTarget;\n        if (path === undefined || path === null) {\n            throw new Error('Navigation path is missing. Make sure you have added navigation.onClick on the `a` tag and `href` is present.');\n        }\n        const { metaKey, ctrlKey, shiftKey } = event;\n        await this.navigateTo({ path, type, target, metaKey, ctrlKey, shiftKey });\n    }\n}\n\n/**\n * @internal\n */\nclass ResizeTracker {\n    bridge;\n    observer;\n    constructor(bridge) {\n        this.bridge = bridge;\n        this.observer = new ResizeObserver((entries) => this.handleResizeEvent(entries));\n        this.observer.observe(document.body);\n    }\n    handleResizeEvent(entries) {\n        const { height } = entries[0].contentRect;\n        this.bridge.sendUnidirectionalMessage({\n            type: 'resize',\n            payload: {\n                height,\n            },\n        });\n    }\n    destroy() {\n        this.observer.disconnect();\n    }\n}\n\n/**\n * Invoke UI features within the main Falcon Console.\n */\nclass UI {\n    bridge;\n    constructor(bridge) {\n        this.bridge = bridge;\n    }\n    /**\n     * Open a modal within the Falcon Console, rendering an UI extension of your choice.\n     *\n     * ```js\n     * const result = await api.ui.openModal({ id: '<extension ID as defined in the manifest>', type: 'extension' }, 'Modal title', {\n        path: '/foo',\n        data: { foo: 'bar' },\n        size: 'lg',\n        align: 'top',\n      });\n      ```\n     *\n     * @param extension The identifier of the extension, consisting of {@link ExtensionIdentifier.id} and {@link ExtensionIdentifier.type}\n     * @param title The title to render in the header of the modal\n     * @param options\n     * @returns a Promise that resolves with the data passed to {@link closeModal}, or `undefined` if the user dismisses it\n     */\n    async openModal(extension, title, options = {}) {\n        const result = await this.bridge.postMessage({\n            type: 'openModal',\n            payload: {\n                extension,\n                title,\n                options,\n            },\n        });\n        if (result instanceof Error) {\n            throw result;\n        }\n        return result;\n    }\n    /**\n     * Close a modal already opened via {@link openModal}. This can be called both by the extension that is rendered inside the modal or by the extension that opened the modal.\n     *\n     * @param payload the data to return to the caller that opened the modal as the value of the resolved promise\n     */\n    closeModal(payload) {\n        this.bridge.sendUnidirectionalMessage({\n            type: 'closeModal',\n            payload,\n        });\n    }\n    /**\n     * This opens a file upload modal inside the Falcon Console, to support file uploads, even large binary files.\n     *\n     * @param fileUploadType the type of file upload\n     * @param initialData data that you want to pre-populate the form with\n     */\n    async uploadFile(fileUploadType, initialData) {\n        return this.bridge.postMessage({\n            type: 'fileUpload',\n            fileUploadType,\n            payload: initialData,\n        });\n    }\n}\n\n/**\n * This is the main class and only entrypoint for engaging with the Falcon APIs from an Foundry UI extension or page.\n *\n * At the very minimum, you would have to instantiate the class and connect to the Falcon Console:\n *\n * ```js\n * import FalconApi from '@crowdstrike/foundry-js';\n *\n * const api = new FalconApi();\n *\n * await api.connect();\n * ```\n *\n */\nclass FalconApi {\n    /**\n     * @internal\n     */\n    isConnected = false;\n    /**\n     * An event emitter that allows you to subscribe to events issued by the Falcon Console.\n     *\n     * Currently supported event types:\n     * * `data`: fires when {@link data} is updated.\n     * * `broadcast`: this event is received when another extension of the same app has send a `broadcast` event via {@link sendBroadcast}.\n     *\n     * ```js\n     * api.events.on('data', (newData) => console.log('new data received:', newData));\n     * ```\n     */\n    events = new Emittery();\n    /**\n     * The \"local data\" that your extension receives from the Falcon Console. This can vary depending on the state of the Falcon Console and the socket of the extension.\n     *\n     * At the very least it will contain the data specified by the {@link LocalData} interface.\n     */\n    data;\n    /**\n     * @internal\n     */\n    bridge = new Bridge({\n        onDataUpdate: (data) => this.handleDataUpdate(data),\n        onBroadcast: (msg) => this.handleBroadcastMessage(msg),\n        onLivereload: () => this.handleLivereloadMessage(),\n    });\n    /**\n     * Namespace for all the {@link FalconPublicApis | Falcon Cloud APIs} you have access to with this SDK.\n     */\n    api = new FalconPublicApis(this);\n    /**\n     * The {@link UI} class contains methods to invoke UI features within the main Falcon Console.\n     */\n    ui = new UI(this.bridge);\n    resizeTracker;\n    cloudFunctions = [];\n    apiIntegrations = [];\n    collections = [];\n    /**\n     * Connect to the main Falcon Console from within your UI extension.\n     *\n     * This establishes a connection to send messages between the extension and the Falcon Console. Only when established you will be able to call other APIs.\n     */\n    async connect() {\n        const response = await this.bridge.postMessage({ type: 'connect' });\n        if (response !== undefined) {\n            const { data, origin } = response;\n            this.bridge.setOrigin(origin);\n            this.data = data;\n            this.updateTheme(data?.theme);\n            this.isConnected = true;\n        }\n        this.resizeTracker = new ResizeTracker(this.bridge);\n        return response;\n    }\n    /**\n     * The ID of the Foundry app this UI extension belongs to.\n     */\n    get appId() {\n        return this.data?.app.id;\n    }\n    /**\n     * Sending broadcast messages is a mechanism for allowing communication between different UI extensions, when they are displayed at the same time.\n     * When sending a broadcast message, other extensions need to listen for the `broadcast` event on the {@link events} event emitter.\n     *\n     * Note that broadcast messages are only dispatched between UI extensions of the same app!\n     *\n     * @param payload the data you want to send to other UI extensions\n     */\n    sendBroadcast(payload) {\n        this.bridge.sendUnidirectionalMessage({ type: 'broadcast', payload });\n    }\n    handleDataUpdate(dataMessage) {\n        this.data = dataMessage.payload;\n        this.updateTheme(this.data.theme);\n        this.events.emit('data', this.data);\n    }\n    handleBroadcastMessage(message) {\n        this.events.emit('broadcast', message.payload);\n    }\n    handleLivereloadMessage() {\n        document.location.reload();\n    }\n    updateTheme(activeTheme) {\n        if (!activeTheme) {\n            return;\n        }\n        const inactiveTheme = activeTheme === 'theme-dark' ? 'theme-light' : 'theme-dark';\n        document.documentElement.classList.add(activeTheme);\n        document.documentElement.classList.remove(inactiveTheme);\n    }\n    /**\n     * Create a {@link CloudFunction} to integrate with Falcon's \"Function as a Service\" platform.\n     *\n     * @param definition\n     * @returns\n     */\n    cloudFunction(definition) {\n        assertConnection(this);\n        const cf = new CloudFunction(this, definition);\n        this.cloudFunctions.push(cf);\n        return cf;\n    }\n    /**\n     * Create an {@link ApiIntegration} to call external APIs.\n     *\n     * @param defintition\n     * @returns\n     */\n    apiIntegration({ definitionId, operationId, }) {\n        assertConnection(this);\n        if (!this.data) {\n            throw Error('Data from console is missing');\n        }\n        const apiIntegration = new ApiIntegration(this, {\n            operationId,\n            definitionId: definitionId,\n        });\n        this.apiIntegrations.push(apiIntegration);\n        return apiIntegration;\n    }\n    /**\n     * Create a {@link Collection} to write to and query Falcon's custom storage service.\n     *\n     * @param definition\n     * @returns\n     */\n    collection({ collection }) {\n        assertConnection(this);\n        const co = new Collection(this, { collection });\n        this.collections.push(co);\n        return co;\n    }\n    /**\n     * The {@link Navigation} class provides functionality to navigate to other pages.\n     */\n    get navigation() {\n        assertConnection(this);\n        return new Navigation(this);\n    }\n    /**\n     * The {@link Logscale} class allows you to read and write to your custom LogScale repository.\n     */\n    get logscale() {\n        assertConnection(this);\n        return new Logscale(this);\n    }\n    destroy() {\n        this.cloudFunctions.forEach((cf) => cf.destroy());\n        this.resizeTracker?.destroy();\n        this.bridge.destroy();\n    }\n}\n__decorate([\n    Memoize()\n], FalconApi.prototype, \"navigation\", null);\n__decorate([\n    Memoize()\n], FalconApi.prototype, \"logscale\", null);\n\nexport { Bridge, FalconApi as default };\n//# sourceMappingURL=index.js.map\n","import FalconApi from \"@crowdstrike/foundry-js\";\nconst POLL_MS = 5000;\nconst POLL_MAX_ATTEMPTS = 60000 / POLL_MS;\nconst WORKFLOW_NAME = \"translate-with-charlotte-ai\";\n\nexport const createFalconService = async (onDetectionChanged) => {\n  const falcon = new FalconApi();\n  falcon.events.on(\"data\", (data) => {\n    onDetectionChanged(data?.detectionId ?? data?.detection?.composite_id);\n  });\n  await falcon.connect();\n\n  const getDetectionById = async (detectionId) => {\n    const postEntitiesAlertsV2 = api(\"PostEntitiesAlertsV2\", { json: true });\n    const alert = await postEntitiesAlertsV2.get({\n      composite_ids: [detectionId],\n    });\n\n    return alert;\n  };\n\n  const getCollectionData = async (detectionId) => {\n    const collection = falcon.collection({ collection: \"detection_context\" });\n\n    const keys = await collection.search({\n      filter: `compositeId:'${detectionId}'`,\n    });\n\n    const entries = await Promise.all(\n      keys?.resources?.map(({ object_key }) =>\n        collection.read(object_key).then((entry) => ({ ...entry, object_key }))\n      )\n    );\n\n    return entries.filter(Boolean);\n  };\n\n  const getDetectionComments = async (detectionId) => {\n    const queryCasesIdsByFilter = api(\"QueryCasesIdsByFilter\");\n    const queryActivityByCaseID = api(\"QueryActivityByCaseID\");\n    const getCaseActivityByIds = api(\"GetCaseActivityByIds\", { json: true });\n\n    const cases = await queryCasesIdsByFilter.list({\n      query: {\n        filter: `case.detections.id:'${detectionId}'`,\n      },\n    });\n\n    const activityIds = await Promise.all(\n      cases.map((case_id) => queryActivityByCaseID.list({ query: { case_id } }))\n    );\n\n    const ids = activityIds\n      .flat()\n      .filter(Boolean)\n      .filter((id) => typeof id === \"string\");\n\n    const activities = ids.length\n      ? await getCaseActivityByIds.list({ ids })\n      : [];\n\n    return activities.filter(({ type }) => type === \"comment\");\n  };\n\n  const translateHtml = async ({ language, htmlContent, collectionEntry }) => {\n    const triggerResult = await falcon.api.workflows.postEntitiesExecuteV1(\n      { language, htmlContent, ...collectionEntry },\n      { name: WORKFLOW_NAME, depth: 0 }\n    );\n\n    if (triggerResult.errors?.length) {\n      throw Error(\n        `${triggerResult?.errors[0].code} ${triggerResult.errors[0].message}`\n      );\n    }\n\n    const ids = triggerResult?.resources?.[0];\n\n    const poll = async () =>\n      falcon.api.workflows.getEntitiesExecutionResultsV1({ ids });\n\n    let errors = [];\n    let resources = [{ status: \"In progress\" }];\n    let attempts = 0;\n    while (!errors?.length && resources?.[0]?.status === \"In progress\") {\n      if (attempts >= POLL_MAX_ATTEMPTS) throw new WorkflowTimeoutError();\n      attempts++;\n      await aMoment();\n      ({ errors, resources } = await poll());\n    }\n\n    return Object.values(resources?.[0]?.output_data ?? {}).join(\"\\n\");\n  };\n\n  const api = (operationId, { json } = {}) => {\n    const _api = falcon.apiIntegration({\n      definitionId: \"Crowdstrike alerts and message-center\",\n      operationId,\n    });\n\n    const exec = (params) =>\n      _api.execute({ request: { [json ? \"json\" : \"params\"]: params } });\n\n    const getResults = (res) =>\n      res?.resources?.[0]?.response_body?.resources ?? [];\n\n    return {\n      get: (params) => exec(params).then((res) => getResults(res)?.[0] ?? {}),\n      list: (params) => exec(params).then(getResults),\n    };\n  };\n\n  return {\n    getDetectionById,\n    getCollectionData,\n    getDetectionComments,\n    translateHtml,\n    data: {\n      ...falcon.data,\n      detectionId:\n        falcon.data?.detectionId ?? falcon.data?.detection?.composite_id,\n    },\n  };\n};\n\nconst aMoment = () => new Promise((resolve) => setTimeout(resolve, POLL_MS));\n\nexport class WorkflowTimeoutError extends Error {\n  constructor() {\n    super(\"Max polling attempts for workflow completion\");\n  }\n}\n","/*! @license DOMPurify 3.2.6 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.6/LICENSE */\n\nconst {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor\n} = Object;\nlet {\n  freeze,\n  seal,\n  create\n} = Object; // eslint-disable-line import/no-mutable-exports\nlet {\n  apply,\n  construct\n} = typeof Reflect !== 'undefined' && Reflect;\nif (!freeze) {\n  freeze = function freeze(x) {\n    return x;\n  };\n}\nif (!seal) {\n  seal = function seal(x) {\n    return x;\n  };\n}\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\nif (!construct) {\n  construct = function construct(Func, args) {\n    return new Func(...args);\n  };\n}\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayLastIndexOf = unapply(Array.prototype.lastIndexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySplice = unapply(Array.prototype.splice);\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\nconst objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\nconst regExpTest = unapply(RegExp.prototype.test);\nconst typeErrorCreate = unconstruct(TypeError);\n/**\n * Creates a new function that calls the given function with a specified thisArg and arguments.\n *\n * @param func - The function to be wrapped and called.\n * @returns A new function that calls the given function with a specified thisArg and arguments.\n */\nfunction unapply(func) {\n  return function (thisArg) {\n    if (thisArg instanceof RegExp) {\n      thisArg.lastIndex = 0;\n    }\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return apply(func, thisArg, args);\n  };\n}\n/**\n * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n *\n * @param func - The constructor function to be wrapped and called.\n * @returns A new function that constructs an instance of the given constructor function with the provided arguments.\n */\nfunction unconstruct(func) {\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return construct(func, args);\n  };\n}\n/**\n * Add properties to a lookup table\n *\n * @param set - The set to which elements will be added.\n * @param array - The array containing elements to be added to the set.\n * @param transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n * @returns The modified set with added elements.\n */\nfunction addToSet(set, array) {\n  let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n        element = lcElement;\n      }\n    }\n    set[element] = true;\n  }\n  return set;\n}\n/**\n * Clean up an array to harden against CSPP\n *\n * @param array - The array to be cleaned.\n * @returns The cleaned version of the array\n */\nfunction cleanArray(array) {\n  for (let index = 0; index < array.length; index++) {\n    const isPropertyExist = objectHasOwnProperty(array, index);\n    if (!isPropertyExist) {\n      array[index] = null;\n    }\n  }\n  return array;\n}\n/**\n * Shallow clone an object\n *\n * @param object - The object to be cloned.\n * @returns A new object that copies the original.\n */\nfunction clone(object) {\n  const newObject = create(null);\n  for (const [property, value] of entries(object)) {\n    const isPropertyExist = objectHasOwnProperty(object, property);\n    if (isPropertyExist) {\n      if (Array.isArray(value)) {\n        newObject[property] = cleanArray(value);\n      } else if (value && typeof value === 'object' && value.constructor === Object) {\n        newObject[property] = clone(value);\n      } else {\n        newObject[property] = value;\n      }\n    }\n  }\n  return newObject;\n}\n/**\n * This method automatically checks if the prop is function or getter and behaves accordingly.\n *\n * @param object - The object to look up the getter function in its prototype chain.\n * @param prop - The property name for which to find the getter function.\n * @returns The getter function found in the prototype chain or a fallback function.\n */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n    object = getPrototypeOf(object);\n  }\n  function fallbackValue() {\n    return null;\n  }\n  return fallbackValue;\n}\n\nconst html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\nconst svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\nconst svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nconst svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\nconst mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nconst mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\nconst text = freeze(['#text']);\n\nconst html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'popover', 'popovertarget', 'popovertargetaction', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'wrap', 'xmlns', 'slot']);\nconst svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'amplitude', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'exponent', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'intercept', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'slope', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'tablevalues', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\nconst mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\nconst xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n// eslint-disable-next-line unicorn/better-regex\nconst MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nconst ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nconst TMPLIT_EXPR = seal(/\\$\\{[\\w\\W]*/gm); // eslint-disable-line unicorn/better-regex\nconst DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]+$/); // eslint-disable-line no-useless-escape\nconst ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nconst IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp|matrix):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nconst IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nconst ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nconst DOCTYPE_NAME = seal(/^html$/i);\nconst CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n\nvar EXPRESSIONS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ARIA_ATTR: ARIA_ATTR,\n  ATTR_WHITESPACE: ATTR_WHITESPACE,\n  CUSTOM_ELEMENT: CUSTOM_ELEMENT,\n  DATA_ATTR: DATA_ATTR,\n  DOCTYPE_NAME: DOCTYPE_NAME,\n  ERB_EXPR: ERB_EXPR,\n  IS_ALLOWED_URI: IS_ALLOWED_URI,\n  IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n  MUSTACHE_EXPR: MUSTACHE_EXPR,\n  TMPLIT_EXPR: TMPLIT_EXPR\n});\n\n/* eslint-disable @typescript-eslint/indent */\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\nconst NODE_TYPE = {\n  element: 1,\n  attribute: 2,\n  text: 3,\n  cdataSection: 4,\n  entityReference: 5,\n  // Deprecated\n  entityNode: 6,\n  // Deprecated\n  progressingInstruction: 7,\n  comment: 8,\n  document: 9,\n  documentType: 10,\n  documentFragment: 11,\n  notation: 12 // Deprecated\n};\nconst getGlobal = function getGlobal() {\n  return typeof window === 'undefined' ? null : window;\n};\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param trustedTypes The policy factory.\n * @param purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\nconst _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n  if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  }\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      }\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\nconst _createHooksMap = function _createHooksMap() {\n  return {\n    afterSanitizeAttributes: [],\n    afterSanitizeElements: [],\n    afterSanitizeShadowDOM: [],\n    beforeSanitizeAttributes: [],\n    beforeSanitizeElements: [],\n    beforeSanitizeShadowDOM: [],\n    uponSanitizeAttribute: [],\n    uponSanitizeElement: [],\n    uponSanitizeShadowNode: []\n  };\n};\nfunction createDOMPurify() {\n  let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n  const DOMPurify = root => createDOMPurify(root);\n  DOMPurify.version = '3.2.6';\n  DOMPurify.removed = [];\n  if (!window || !window.document || window.document.nodeType !== NODE_TYPE.document || !window.Element) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n    return DOMPurify;\n  }\n  let {\n    document\n  } = window;\n  const originalDocument = document;\n  const currentScript = originalDocument.currentScript;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes\n  } = window;\n  const ElementPrototype = Element.prototype;\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const remove = lookupGetter(ElementPrototype, 'remove');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName\n  } = document;\n  const {\n    importNode\n  } = originalDocument;\n  let hooks = _createHooksMap();\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n    CUSTOM_ELEMENT\n  } = EXPRESSIONS;\n  let {\n    IS_ALLOWED_URI: IS_ALLOWED_URI$1\n  } = EXPRESSIONS;\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n  /*\n   * Configure how DOMPurify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n    tagNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    attributeNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    allowCustomizedBuiltInElements: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: false\n    }\n  }));\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n  /* Output should be safe even for XML used within HTML and alike.\n   * This means, DOMPurify removes comments when containing risky content.\n   */\n  let SAFE_FOR_XML = true;\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n  let MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n  let HTML_INTEGRATION_POINTS = addToSet({}, ['annotation-xml']);\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE = null;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc = null;\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n  const formElement = document.createElement('form');\n  const isRegexOrFunction = function isRegexOrFunction(testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n  /**\n   * _parseConfig\n   *\n   * @param cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function _parseConfig() {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n    PARSER_MEDIA_TYPE =\n    // eslint-disable-next-line unicorn/prefer-includes\n    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n    /* Set configuration parameters */\n    ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS') ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR') ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES') ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR') ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR, transformCaseFunc) : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS') ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS, transformCaseFunc) : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS') ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS') ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : clone({});\n    FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR') ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : clone({});\n    USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES') ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    MATHML_TEXT_INTEGRATION_POINTS = cfg.MATHML_TEXT_INTEGRATION_POINTS || MATHML_TEXT_INTEGRATION_POINTS;\n    HTML_INTEGRATION_POINTS = cfg.HTML_INTEGRATION_POINTS || HTML_INTEGRATION_POINTS;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, text);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html$1);\n        addToSet(ALLOWED_ATTR, html);\n      }\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg$1);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl$1);\n        addToSet(ALLOWED_ATTR, mathMl);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n      }\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n      }\n      // Overwrite existing TrustedTypes policy.\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n      // Sign local variables required by `sanitize`.\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n      }\n      // If creating the internal policy succeeded sign internal variables.\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    }\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n    CONFIG = cfg;\n  };\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n  const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n  /**\n   * @param element a DOM element whose namespace is being checked\n   * @returns Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function _checkValidNamespace(element) {\n    let parent = getParentNode(element);\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template'\n      };\n    }\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n      }\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n    }\n    // For XHTML and XML documents that support custom namespaces\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return true;\n    }\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n  /**\n   * _forceRemove\n   *\n   * @param node a DOM node\n   */\n  const _forceRemove = function _forceRemove(node) {\n    arrayPush(DOMPurify.removed, {\n      element: node\n    });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      getParentNode(node).removeChild(node);\n    } catch (_) {\n      remove(node);\n    }\n  };\n  /**\n   * _removeAttribute\n   *\n   * @param name an Attribute name\n   * @param element a DOM node\n   */\n  const _removeAttribute = function _removeAttribute(name, element) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: element.getAttributeNode(name),\n        from: element\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: element\n      });\n    }\n    element.removeAttribute(name);\n    // We void attribute values for unremovable \"is\" attributes\n    if (name === 'is') {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(element);\n        } catch (_) {}\n      } else {\n        try {\n          element.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n  /**\n   * _initDocument\n   *\n   * @param dirty - a string of dirty markup\n   * @return a DOM, filled with the dirty markup\n   */\n  const _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    let doc = null;\n    let leadingWhitespace = null;\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n    }\n    const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n    const body = doc.body || doc.documentElement;\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n    }\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    }\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n  /**\n   * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n   *\n   * @param root The root element or node to start traversing on.\n   * @return The created NodeIterator\n   */\n  const _createNodeIterator = function _createNodeIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root,\n    // eslint-disable-next-line no-bitwise\n    NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION, null);\n  };\n  /**\n   * _isClobbered\n   *\n   * @param element element to check for clobbering attacks\n   * @return true if clobbered, false if safe\n   */\n  const _isClobbered = function _isClobbered(element) {\n    return element instanceof HTMLFormElement && (typeof element.nodeName !== 'string' || typeof element.textContent !== 'string' || typeof element.removeChild !== 'function' || !(element.attributes instanceof NamedNodeMap) || typeof element.removeAttribute !== 'function' || typeof element.setAttribute !== 'function' || typeof element.namespaceURI !== 'string' || typeof element.insertBefore !== 'function' || typeof element.hasChildNodes !== 'function');\n  };\n  /**\n   * Checks whether the given object is a DOM node.\n   *\n   * @param value object to check whether it's a DOM node\n   * @return true is object is a DOM node\n   */\n  const _isNode = function _isNode(value) {\n    return typeof Node === 'function' && value instanceof Node;\n  };\n  function _executeHooks(hooks, currentNode, data) {\n    arrayForEach(hooks, hook => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  }\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   * @param currentNode to check for permission to exist\n   * @return true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function _sanitizeElements(currentNode) {\n    let content = null;\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeElements, currentNode, null);\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n    /* Execute a hook if present */\n    _executeHooks(hooks.uponSanitizeElement, currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (SAFE_FOR_XML && currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w!]/g, currentNode.innerHTML) && regExpTest(/<[/\\w!]/g, currentNode.textContent)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any occurrence of processing instructions */\n    if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any kind of possibly harmful comments */\n    if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\\w]/g, currentNode.data)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n          return false;\n        }\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n          return false;\n        }\n      }\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n          for (let i = childCount - 1; i >= 0; --i) {\n            const childClone = cloneNode(childNodes[i], true);\n            childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n            parentNode.insertBefore(childClone, getNextSibling(currentNode));\n          }\n        }\n      }\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        content = stringReplace(content, expr, ' ');\n      });\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, {\n          element: currentNode.cloneNode()\n        });\n        currentNode.textContent = content;\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeElements, currentNode, null);\n    return false;\n  };\n  /**\n   * _isValidAttribute\n   *\n   * @param lcTag Lowercase tag name of containing element.\n   * @param lcName Lowercase attribute name.\n   * @param value Attribute value.\n   * @return Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n      // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n      // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n      _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n      // Alternative, second condition checks if it's an `is`-attribute, AND\n      // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n      return false;\n    } else ;\n    return true;\n  };\n  /**\n   * _isBasicCustomElement\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   *\n   * @param tagName name of the tag of the node to sanitize\n   * @returns Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n   */\n  const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n    return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n  };\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param currentNode to sanitize\n   */\n  const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeAttributes, currentNode, null);\n    const {\n      attributes\n    } = currentNode;\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes || _isClobbered(currentNode)) {\n      return;\n    }\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n      forceKeepAttr: undefined\n    };\n    let l = attributes.length;\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      const attr = attributes[l];\n      const {\n        name,\n        namespaceURI,\n        value: attrValue\n      } = attr;\n      const lcName = transformCaseFunc(name);\n      const initValue = attrValue;\n      let value = name === 'value' ? initValue : stringTrim(initValue);\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHooks(hooks.uponSanitizeAttribute, currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n      /* Work around a security issue with comments inside attributes */\n      if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          value = stringReplace(value, expr, ' ');\n        });\n      }\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Handle attributes that require Trusted Types */\n      if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n        if (namespaceURI) ; else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              {\n                value = trustedTypesPolicy.createHTML(value);\n                break;\n              }\n            case 'TrustedScriptURL':\n              {\n                value = trustedTypesPolicy.createScriptURL(value);\n                break;\n              }\n          }\n        }\n      }\n      /* Handle invalid data-* attribute set by try-catching it */\n      if (value !== initValue) {\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n          if (_isClobbered(currentNode)) {\n            _forceRemove(currentNode);\n          } else {\n            arrayPop(DOMPurify.removed);\n          }\n        } catch (_) {\n          _removeAttribute(name, currentNode);\n        }\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeAttributes, currentNode, null);\n  };\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    let shadowNode = null;\n    const shadowIterator = _createNodeIterator(fragment);\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeShadowDOM, fragment, null);\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHooks(hooks.uponSanitizeShadowNode, shadowNode, null);\n      /* Sanitize tags and elements */\n      _sanitizeElements(shadowNode);\n      /* Check attributes next */\n      _sanitizeAttributes(shadowNode);\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeShadowDOM, fragment, null);\n  };\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty) {\n    let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let body = null;\n    let importedNode = null;\n    let currentNode = null;\n    let returnNode = null;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n      // eslint-disable-next-line unicorn/prefer-includes\n      dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n    /* Get node iterator */\n    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n    /* Now start iterating over the created document */\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Sanitize tags and elements */\n      _sanitizeElements(currentNode);\n      /* Check attributes next */\n      _sanitizeAttributes(currentNode);\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n    }\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n      return returnNode;\n    }\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n    /* Serialize doctype if allowed */\n    if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n      serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        serializedHTML = stringReplace(serializedHTML, expr, ' ');\n      });\n    }\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n  DOMPurify.setConfig = function () {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n  DOMPurify.removeHook = function (entryPoint, hookFunction) {\n    if (hookFunction !== undefined) {\n      const index = arrayLastIndexOf(hooks[entryPoint], hookFunction);\n      return index === -1 ? undefined : arraySplice(hooks[entryPoint], index, 1)[0];\n    }\n    return arrayPop(hooks[entryPoint]);\n  };\n  DOMPurify.removeHooks = function (entryPoint) {\n    hooks[entryPoint] = [];\n  };\n  DOMPurify.removeAllHooks = function () {\n    hooks = _createHooksMap();\n  };\n  return DOMPurify;\n}\nvar purify = createDOMPurify();\n\nexport { purify as default };\n//# sourceMappingURL=purify.es.mjs.map\n","import DomPurify from \"dompurify\";\n\nconst sanitize = DomPurify.sanitize;\n\nexport const contextEntryHtml = ({ title, content }) =>\n  `<div class=\"space-y-2 rounded bg-surface-md p-3 shadow-base\">\n      <header class=\"type-md-tight-medium overflow-hidden text-titles-and-attributes\">\n        ${sanitize(title)}\n      </header>\n      <div class=\"type-md min-h-6 text-titles-and-attributes\">\n        ${sanitize(content)}\n      </div>\n    </div>`;\n\nexport const commentHtml = ({\n  created_by: { display_name },\n  created_time,\n  body,\n}) => `\n  <li class=\"grid gap-1\">\n    <div class=\"font-semibold text-gray-900\">\n        ${sanitize(display_name)} on ${sanitize(created_time)}\n    </div>\n    ${sanitize(body)}\n  </li>`;\n\nexport const detectionHtml = (alert, comments = []) => {\n  const {\n    description,\n    overwatch_note,\n    overwatch_note_timestamp,\n    automated_triage,\n  } = alert;\n  const { triage_explanation } = automated_triage ?? {};\n\n  const overWatchHtml = overwatch_note\n    ? `\n    <div class=\"grid gap-1\">\n      <dt class=\"font-semibold text-gray-900\">\n        Overwatch notes ${\n          overwatch_note_timestamp\n            ? \"(\" + sanitize(overwatch_note_timestamp) + \")\"\n            : \"\"\n        }\n      </dt>\n      <dd class=\"text-gray-600\">\n        ${sanitize(overwatch_note)}\n      </dd>\n    </div>\n  `\n    : \"\";\n\n  let html = `\n  <dl class=\"space-y-6\">  \n    <div class=\"grid gap-1\">\n      <dt class=\"font-semibold text-gray-900\">Description</dt>\n      <dd class=\"text-gray-600\">\n        ${sanitize(description)}\n      </dd>\n    </div>\n\n    ${overWatchHtml}\n      \n    <div class=\"grid gap-1\">\n      <dt class=\"font-semibold text-gray-900\">AI Triage</dt>\n      <dd class=\"text-gray-600\">\n        ${sanitize(triage_explanation)}\n      </dd>\n    </div>\n  </dl>\n`;\n\n  if (comments.length) {\n    html += `\n    <div class=\"mt-6\">\n      <h2 class=\"font-semibold text-gray-900\">Falcon complete</h2> \n      <h3 class=\"font-semibold text-gray-900 text-sm\">Comments</h3> \n      <ul class=\"space-y-6\">\n        ${comments.map(commentHtml).map(sanitize).join(\"\\n\")}\n      </ul>\n    </div>`;\n  }\n\n  return html;\n};\n","import { WorkflowTimeoutError } from \"./falconService\";\nimport { contextEntryHtml, detectionHtml } from \"./htmlGenerator\";\n\nexport async function translateDetection({\n  detectionId,\n  language,\n  collectionEntry,\n  domSlots,\n  falconService,\n}) {\n  const { title, type, objectKey } = collectionEntry;\n  const { getDetectionById, getDetectionComments, translateHtml } =\n    falconService;\n  try {\n    domSlots.translationSlot.innerHTML = contextEntryHtml({\n      title: \"Translation in progress...\",\n      content:\n        \"Your translation is being processed. This may take a few moments depending on content size\",\n    });\n\n    const alert = await getDetectionById(detectionId);\n\n    const comments = await getDetectionComments(detectionId);\n\n    const htmlContent = detectionHtml(alert, comments);\n\n    const translatedContent = await translateHtml({\n      language,\n      htmlContent,\n      collectionEntry,\n    });\n\n    domSlots.translationSlot.innerHTML = contextEntryHtml({\n      title,\n      content: translatedContent ?? htmlContent,\n    });\n  } catch (error) {\n    if (error instanceof WorkflowTimeoutError)\n      // Sometimes the workflow is not marked as complete but the translation is already stored in the collection\n      return await processDetection({\n        detectionId,\n        domSlots,\n        language,\n        falconService,\n      });\n\n    console.error(\"Error processing detection:\", error);\n    domSlots.translationSlot.innerHTML = `\n      <div class=\"p-4 bg-red-100 border border-red-400 text-red-700  rounded\">\n        Error translating detection: ${error.message}\n      </div>\n    `;\n  }\n}\n\nexport async function processDetection({\n  detectionId,\n  domSlots,\n  language,\n  falconService,\n}) {\n  let entries = [];\n  const { getCollectionData } = falconService;\n  const { translationSlot, contextSlot } = domSlots;\n\n  try {\n    translationSlot.innerHTML = \"\";\n    contextSlot.innerHTML = contextEntryHtml({\n      title: \"\",\n      content: \"Loading detection context...\",\n    });\n\n    entries = await getCollectionData(detectionId);\n\n    const cleanDetectionId = detectionId.replace(/[^\\w\\-\\.]/g, \"\");\n    const title = `Detection translation (${language})`;\n    const type = `translation_${language}`;\n    const objectKey = `${cleanDetectionId}_${type}`;\n    const translationEntry = entries.find(\n      ({ object_key }) => object_key === objectKey\n    );\n\n    let translationHtml = \"\";\n\n    if (translationEntry) translationHtml = contextEntryHtml(translationEntry);\n    else if (language === \"en\")\n      translationHtml = contextEntryHtml({\n        title,\n        content: `Your browser language is already configured in English. No translation needed.`,\n      });\n    else\n      translationHtml = contextEntryHtml({\n        title,\n        content: `\n        <div>\n          <p>There is no yet translation available for this detection. Click in the button to get an AI translation of the detection details.<p>\n          <p>The translation will use Charlotte AI credit</p>\n          <button id=\"translateBtn\"  \n            class=\"focusable interactive-normal type-md-medium rounded-sm my-2 py-1 px-3 transition duration-150 ease-in-out focusable transition\">\n            Translate detection details\n          </button>\n        </div>`,\n      });\n\n    translationSlot.innerHTML = translationHtml;\n    const otherEntries = entries.filter(\n      ({ object_key }) => object_key !== objectKey\n    );\n    contextSlot.innerHTML = otherEntries.map(contextEntryHtml).join(\"\");\n\n    const btn = document.getElementById(\"translateBtn\");\n    if (btn) {\n      const collectionEntry = {\n        title,\n        type,\n        objectKey,\n        compositeId: detectionId,\n      };\n      btn.addEventListener(\"click\", () =>\n        translateDetection({\n          detectionId,\n          language,\n          collectionEntry,\n          falconService,\n          domSlots,\n        })\n      );\n    }\n  } catch (error) {\n    console.error(\"Error processing detection:\", error);\n    translationSlot.innerHTML = `\n      <div class=\"p-4 bg-red-100 border border-red-400 text-red-700  rounded\">\n        Error processing detection: ${error.message}\n      </div>\n    `;\n  }\n\n  return { entries, language };\n}\n","import { createFalconService } from \"./falconService.js\";\nimport { processDetection } from \"./processDetection.js\";\n\nasync function main() {\n  let detectionId;\n  const domSlots = {\n    translationSlot: document.getElementById(\"translationSlot\"),\n    contextSlot: document.getElementById(\"contextSlot\"),\n  };\n  const language = navigator.language\n    ? navigator.language.toLowerCase().split(\"-\")[0]\n    : \"en\";\n\n  const detectionChangedHandler = (newId) => {\n    if (detectionId && newId && detectionId !== newId) {\n      processDetection({\n        detectionId: newId,\n        language,\n        domSlots,\n        falconService,\n      });\n    }\n  };\n\n  const { data, ...falconService } = await createFalconService(\n    detectionChangedHandler\n  );\n\n  detectionId = data.detectionId;\n  await processDetection({\n    detectionId,\n    language,\n    domSlots,\n    falconService,\n  });\n}\n\nif (typeof window !== \"undefined\") {\n  main();\n}\n"],"names":["getRandomValues","rnds8","rng","byteToHex","i","unsafeStringify","arr","offset","randomUUID","native","v4","options","buf","rnds","VERSION","assertConnection","falcon","isValidResponse","event","CONNECTION_TIMEOUT","API_TIMEOUT","NAVIGATION_TIMEOUT","timeoutForMessage","message","Bridge","onDataUpdate","onBroadcast","onLivereload","origin","messageId","eventData","resolve","reject","timeoutTimer","timeoutValue","result","callback","__decorate","decorators","target","key","desc","c","r","d","anyMap","eventsMap","producersMap","anyProducer","resolvedPromise","listenerAdded","listenerRemoved","canEmitMetaEvents","isGlobalDebugEnabled","isEventKeyType","assertEventName","eventName","assertListener","listener","getListeners","instance","events","getEventProducers","producers","enqueueProducers","producer","item","iterator","eventNames","isFinished","flush","queue","set","value","defaultMethodNamesOrAssert","methodNames","allEmitteryMethods","methodName","isMetaEvent","emitMetaEvent","emitter","Emittery","emitteryPropertyName","getEmitteryProperty","emitteryMethodCaller","args","define_globalThis_process_env_default","env","newValue","type","debugName","currentTime","logTime","off_","promise","data","listeners","anyListeners","staticListeners","staticAnyListeners","count","v","Memoize","hashFunction","duration","tags","propertyKey","descriptor","getNewFunction","clearCacheTagsMap","originalMethod","propMapName","returnedValue","myMap","tag","hashKey","a","timestampKey","isExpired","timestamp","AlertsApiBridge","bridge","urlParams","postBody","CustomobjectsApiBridge","DetectsApiBridge","DevicesApiBridge","FaasGatewayApiBridge","FwmgrApiBridge","IncidentsApiBridge","LoggingapiApiBridge","MitreApiBridge","PluginsApiBridge","RemoteResponseApiBridge","UserManagementApiBridge","WorkflowsApiBridge","FalconPublicApis","api","ApiIntegration","definition","request","CloudFunction","path","method","body","params","functionDefinition","execution","executionId","exceptionRetries","payload","e","pathEntry","urlPath","searchParams","acc","Collection","filter","sort","limit","Logscale","properties","query","savedQuery","ALLOWED_TARGETS","Navigation","metaKey","ctrlKey","shiftKey","defaultTarget","defaultType","ResizeTracker","entries","height","UI","extension","title","fileUploadType","initialData","FalconApi","msg","response","dataMessage","activeTheme","inactiveTheme","cf","definitionId","operationId","apiIntegration","collection","co","POLL_MS","POLL_MAX_ATTEMPTS","WORKFLOW_NAME","createFalconService","onDetectionChanged","getDetectionById","detectionId","getCollectionData","keys","object_key","entry","getDetectionComments","queryCasesIdsByFilter","queryActivityByCaseID","getCaseActivityByIds","cases","ids","case_id","id","translateHtml","language","htmlContent","collectionEntry","triggerResult","poll","errors","resources","attempts","WorkflowTimeoutError","aMoment","json","_api","exec","getResults","res","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","create","apply","construct","x","fun","thisValue","Func","arrayForEach","unapply","arrayLastIndexOf","arrayPop","arrayPush","arraySplice","stringToLowerCase","stringToString","stringMatch","stringReplace","stringIndexOf","stringTrim","objectHasOwnProperty","regExpTest","typeErrorCreate","unconstruct","func","thisArg","_len","_key","_len2","_key2","addToSet","array","transformCaseFunc","l","element","lcElement","cleanArray","index","clone","object","newObject","property","lookupGetter","prop","fallbackValue","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","text","html","svg","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","CUSTOM_ELEMENT","EXPRESSIONS","NODE_TYPE","getGlobal","_createTrustedTypesPolicy","trustedTypes","purifyHostElement","suffix","ATTR_NAME","policyName","scriptUrl","_createHooksMap","createDOMPurify","window","DOMPurify","root","document","originalDocument","currentScript","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","NamedNodeMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","remove","getNextSibling","getChildNodes","getParentNode","template","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","hooks","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","SAFE_FOR_XML","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","_parseConfig","cfg","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","tagName","parentTagName","_forceRemove","node","_removeAttribute","name","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","_createNodeIterator","_isClobbered","_isNode","_executeHooks","currentNode","hook","_sanitizeElements","content","_isBasicCustomElement","parentNode","childNodes","childCount","childClone","expr","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","attributes","hookEvent","attr","namespaceURI","attrValue","initValue","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","importedNode","returnNode","nodeIterator","serializedHTML","entryPoint","hookFunction","purify","sanitize","DomPurify","contextEntryHtml","commentHtml","display_name","created_time","detectionHtml","alert","comments","description","overwatch_note","overwatch_note_timestamp","automated_triage","triage_explanation","overWatchHtml","translateDetection","domSlots","falconService","objectKey","translatedContent","error","processDetection","translationSlot","contextSlot","cleanDetectionId","translationEntry","translationHtml","otherEntries","btn","main","detectionChangedHandler","newId"],"mappings":"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","x_google_ignoreList":[0,2]}